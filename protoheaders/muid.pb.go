// Code generated by protoc-gen-go.
// source: muid.proto
// DO NOT EDIT!

/*
Package muid is a generated protocol buffer package.

It is generated from these files:
	muid.proto

It has these top-level messages:
	Error
	Muid
	GenerateOneReq
	GenerateOneResp
*/
package muid

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error struct {
	Key     string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Muid struct {
	Muid []byte `protobuf:"bytes,1,opt,name=muid,proto3" json:"muid,omitempty"`
}

func (m *Muid) Reset()                    { *m = Muid{} }
func (m *Muid) String() string            { return proto.CompactTextString(m) }
func (*Muid) ProtoMessage()               {}
func (*Muid) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GenerateOneReq struct {
	SizeBytes     int32 `protobuf:"varint,1,opt,name=sizeBytes" json:"sizeBytes,omitempty"`
	SizeTimestamp int32 `protobuf:"varint,2,opt,name=sizeTimestamp" json:"sizeTimestamp,omitempty"`
}

func (m *GenerateOneReq) Reset()                    { *m = GenerateOneReq{} }
func (m *GenerateOneReq) String() string            { return proto.CompactTextString(m) }
func (*GenerateOneReq) ProtoMessage()               {}
func (*GenerateOneReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GenerateOneResp struct {
	// Types that are valid to be assigned to Resp:
	//	*GenerateOneResp_Muid
	//	*GenerateOneResp_Error
	Resp isGenerateOneResp_Resp `protobuf_oneof:"resp"`
}

func (m *GenerateOneResp) Reset()                    { *m = GenerateOneResp{} }
func (m *GenerateOneResp) String() string            { return proto.CompactTextString(m) }
func (*GenerateOneResp) ProtoMessage()               {}
func (*GenerateOneResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type isGenerateOneResp_Resp interface {
	isGenerateOneResp_Resp()
}

type GenerateOneResp_Muid struct {
	Muid *Muid `protobuf:"bytes,1,opt,name=muid,oneof"`
}
type GenerateOneResp_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,oneof"`
}

func (*GenerateOneResp_Muid) isGenerateOneResp_Resp()  {}
func (*GenerateOneResp_Error) isGenerateOneResp_Resp() {}

func (m *GenerateOneResp) GetResp() isGenerateOneResp_Resp {
	if m != nil {
		return m.Resp
	}
	return nil
}

func (m *GenerateOneResp) GetMuid() *Muid {
	if x, ok := m.GetResp().(*GenerateOneResp_Muid); ok {
		return x.Muid
	}
	return nil
}

func (m *GenerateOneResp) GetError() *Error {
	if x, ok := m.GetResp().(*GenerateOneResp_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GenerateOneResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GenerateOneResp_OneofMarshaler, _GenerateOneResp_OneofUnmarshaler, _GenerateOneResp_OneofSizer, []interface{}{
		(*GenerateOneResp_Muid)(nil),
		(*GenerateOneResp_Error)(nil),
	}
}

func _GenerateOneResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GenerateOneResp)
	// resp
	switch x := m.Resp.(type) {
	case *GenerateOneResp_Muid:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Muid); err != nil {
			return err
		}
	case *GenerateOneResp_Error:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("GenerateOneResp.Resp has unexpected type %T", x)
	}
	return nil
}

func _GenerateOneResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GenerateOneResp)
	switch tag {
	case 1: // resp.muid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Muid)
		err := b.DecodeMessage(msg)
		m.Resp = &GenerateOneResp_Muid{msg}
		return true, err
	case 2: // resp.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Error)
		err := b.DecodeMessage(msg)
		m.Resp = &GenerateOneResp_Error{msg}
		return true, err
	default:
		return false, nil
	}
}

func _GenerateOneResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GenerateOneResp)
	// resp
	switch x := m.Resp.(type) {
	case *GenerateOneResp_Muid:
		s := proto.Size(x.Muid)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *GenerateOneResp_Error:
		s := proto.Size(x.Error)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Error)(nil), "muid.Error")
	proto.RegisterType((*Muid)(nil), "muid.Muid")
	proto.RegisterType((*GenerateOneReq)(nil), "muid.GenerateOneReq")
	proto.RegisterType((*GenerateOneResp)(nil), "muid.GenerateOneResp")
}

func init() { proto.RegisterFile("muid.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x50, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x4d, 0x35, 0xa9, 0xf4, 0xc5, 0xaa, 0x0c, 0x0a, 0xa1, 0x78, 0x28, 0xd1, 0x83, 0xa7, 0x1e,
	0xd2, 0xab, 0xa7, 0x82, 0xd8, 0x4b, 0x11, 0x96, 0xfe, 0x00, 0x23, 0x1d, 0x24, 0x48, 0x9a, 0x75,
	0x67, 0x7b, 0xa8, 0xbf, 0x5e, 0x76, 0x56, 0x31, 0x01, 0x6f, 0x33, 0x6f, 0xe7, 0x7d, 0x2d, 0xd0,
	0x1e, 0x9a, 0xdd, 0xc2, 0xba, 0xce, 0x77, 0x94, 0x86, 0xb9, 0x5c, 0x22, 0x7b, 0x72, 0xae, 0x73,
	0x74, 0x85, 0xd3, 0x0f, 0x3e, 0x16, 0xa3, 0xf9, 0xe8, 0x61, 0x62, 0xc2, 0x48, 0x05, 0xce, 0x5a,
	0x16, 0xa9, 0xdf, 0xb9, 0x38, 0x51, 0xf4, 0x77, 0x2d, 0x67, 0x48, 0x37, 0x87, 0x66, 0x47, 0x04,
	0x15, 0x51, 0xd2, 0xb9, 0x89, 0x82, 0x5b, 0x5c, 0x3c, 0xf3, 0x9e, 0x5d, 0xed, 0xf9, 0x65, 0xcf,
	0x86, 0x3f, 0xe9, 0x16, 0x13, 0x69, 0xbe, 0x78, 0x75, 0xf4, 0x2c, 0x7a, 0x9a, 0x99, 0x3f, 0x80,
	0xee, 0x31, 0x0d, 0xcb, 0xb6, 0x69, 0x59, 0x7c, 0xdd, 0x5a, 0xf5, 0xca, 0xcc, 0x10, 0x2c, 0x5f,
	0x71, 0x39, 0x50, 0x15, 0x4b, 0xf3, 0x9e, 0x79, 0x5e, 0x61, 0xa1, 0xd5, 0x42, 0xac, 0x75, 0x12,
	0xa3, 0xd0, 0x1d, 0x32, 0x0e, 0xdd, 0x54, 0x32, 0xaf, 0xf2, 0x78, 0xa2, 0x75, 0xd7, 0x89, 0x89,
	0x6f, 0xab, 0x31, 0x52, 0xc7, 0x62, 0xab, 0x0d, 0xa6, 0x81, 0xfc, 0xe3, 0xd2, 0x39, 0x7a, 0x44,
	0xde, 0xb3, 0xa4, 0xeb, 0xc8, 0x1e, 0x76, 0x9b, 0xdd, 0xfc, 0x83, 0x8a, 0x2d, 0x93, 0xb7, 0xb1,
	0x7e, 0xf2, 0xf2, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x2a, 0xa1, 0x9d, 0x72, 0x01, 0x00, 0x00,
}
